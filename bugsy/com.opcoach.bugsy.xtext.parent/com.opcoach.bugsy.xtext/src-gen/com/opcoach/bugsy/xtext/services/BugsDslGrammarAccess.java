/*
 * generated by Xtext 2.12.0
 */
package com.opcoach.bugsy.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BugsDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class BugsModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.BugsModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBugsModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInstructionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInstructionsInstructionParserRuleCall_3_0 = (RuleCall)cInstructionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//BugsModel:
		//	{BugsModel}
		//	'model' '{'
		//	instructions+=Instruction*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{BugsModel} 'model' '{' instructions+=Instruction* '}'
		public Group getGroup() { return cGroup; }
		
		//{BugsModel}
		public Action getBugsModelAction_0() { return cBugsModelAction_0; }
		
		//'model'
		public Keyword getModelKeyword_1() { return cModelKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//instructions+=Instruction*
		public Assignment getInstructionsAssignment_3() { return cInstructionsAssignment_3; }
		
		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_3_0() { return cInstructionsInstructionParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class InstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Instruction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cForParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRelationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////.................................
		//// Starting grammar definition 
		////.................................
		//Instruction:
		//	For | Relation;
		@Override public ParserRule getRule() { return rule; }
		
		//For | Relation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//For
		public RuleCall getForParserRuleCall_0() { return cForParserRuleCall_0; }
		
		//Relation
		public RuleCall getRelationParserRuleCall_1() { return cRelationParserRuleCall_1; }
	}
	public class ForElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.For");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cForAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cForKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVariableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVariableIDTerminalRuleCall_3_0 = (RuleCall)cVariableAssignment_3.eContents().get(0);
		private final Keyword cInKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLowAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLowINTTerminalRuleCall_5_0 = (RuleCall)cLowAssignment_5.eContents().get(0);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cHighAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cHighIDTerminalRuleCall_7_0 = (RuleCall)cHighAssignment_7.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cContentsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cContentsInstructionParserRuleCall_10_0 = (RuleCall)cContentsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//For:
		//	{For}
		//	'for' '(' variable=ID 'in' low=INT ':' high=ID ')' '{' contents+=Instruction* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{For} 'for' '(' variable=ID 'in' low=INT ':' high=ID ')' '{' contents+=Instruction* '}'
		public Group getGroup() { return cGroup; }
		
		//{For}
		public Action getForAction_0() { return cForAction_0; }
		
		//'for'
		public Keyword getForKeyword_1() { return cForKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//variable=ID
		public Assignment getVariableAssignment_3() { return cVariableAssignment_3; }
		
		//ID
		public RuleCall getVariableIDTerminalRuleCall_3_0() { return cVariableIDTerminalRuleCall_3_0; }
		
		//'in'
		public Keyword getInKeyword_4() { return cInKeyword_4; }
		
		//low=INT
		public Assignment getLowAssignment_5() { return cLowAssignment_5; }
		
		//INT
		public RuleCall getLowINTTerminalRuleCall_5_0() { return cLowINTTerminalRuleCall_5_0; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//high=ID
		public Assignment getHighAssignment_7() { return cHighAssignment_7; }
		
		//ID
		public RuleCall getHighIDTerminalRuleCall_7_0() { return cHighIDTerminalRuleCall_7_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }
		
		//contents+=Instruction*
		public Assignment getContentsAssignment_10() { return cContentsAssignment_10; }
		
		//Instruction
		public RuleCall getContentsInstructionParserRuleCall_10_0() { return cContentsInstructionParserRuleCall_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cRelationTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRelationTypeRelationTypeEnumRuleCall_1_0 = (RuleCall)cRelationTypeAssignment_1.eContents().get(0);
		private final Assignment cLeftExprAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLeftExprOperationParserRuleCall_2_0 = (RuleCall)cLeftExprAssignment_2.eContents().get(0);
		
		//Relation:
		//	name=ID /* (dim=ARRAYDIM)? */ relationType=RelationType leftExpr=Operation;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID /* (dim=ARRAYDIM)? */ relationType=RelationType leftExpr=Operation
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		///* (dim=ARRAYDIM)? */ relationType=RelationType
		public Assignment getRelationTypeAssignment_1() { return cRelationTypeAssignment_1; }
		
		//RelationType
		public RuleCall getRelationTypeRelationTypeEnumRuleCall_1_0() { return cRelationTypeRelationTypeEnumRuleCall_1_0; }
		
		//leftExpr=Operation
		public Assignment getLeftExprAssignment_2() { return cLeftExprAssignment_2; }
		
		//Operation
		public RuleCall getLeftExprOperationParserRuleCall_2_0() { return cLeftExprOperationParserRuleCall_2_0; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Operation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOperationAction_0 = (Action)cGroup.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_1 = (UnorderedGroup)cGroup.eContents().get(1);
		private final Assignment cDistribAssignment_1_0 = (Assignment)cUnorderedGroup_1.eContents().get(0);
		private final RuleCall cDistribDistributionEnumRuleCall_1_0_0 = (RuleCall)cDistribAssignment_1_0.eContents().get(0);
		private final Assignment cFunctionAssignment_1_1 = (Assignment)cUnorderedGroup_1.eContents().get(1);
		private final RuleCall cFunctionFunctionEnumRuleCall_1_1_0 = (RuleCall)cFunctionAssignment_1_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cElementsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cElementsParameterParserRuleCall_3_0_0 = (RuleCall)cElementsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cElementsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cElementsParameterParserRuleCall_3_1_1_0 = (RuleCall)cElementsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Operation:
		//	{Operation} (distrib=Distribution? & function=Function?) '(' (elements+=Parameter (',' elements+=Parameter)*)? ')';
		@Override public ParserRule getRule() { return rule; }
		
		//{Operation} (distrib=Distribution? & function=Function?) '(' (elements+=Parameter (',' elements+=Parameter)*)? ')'
		public Group getGroup() { return cGroup; }
		
		//{Operation}
		public Action getOperationAction_0() { return cOperationAction_0; }
		
		//distrib=Distribution? & function=Function?
		public UnorderedGroup getUnorderedGroup_1() { return cUnorderedGroup_1; }
		
		//distrib=Distribution?
		public Assignment getDistribAssignment_1_0() { return cDistribAssignment_1_0; }
		
		//Distribution
		public RuleCall getDistribDistributionEnumRuleCall_1_0_0() { return cDistribDistributionEnumRuleCall_1_0_0; }
		
		//function=Function?
		public Assignment getFunctionAssignment_1_1() { return cFunctionAssignment_1_1; }
		
		//Function
		public RuleCall getFunctionFunctionEnumRuleCall_1_1_0() { return cFunctionFunctionEnumRuleCall_1_1_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//(elements+=Parameter (',' elements+=Parameter)*)?
		public Group getGroup_3() { return cGroup_3; }
		
		//elements+=Parameter
		public Assignment getElementsAssignment_3_0() { return cElementsAssignment_3_0; }
		
		//Parameter
		public RuleCall getElementsParameterParserRuleCall_3_0_0() { return cElementsParameterParserRuleCall_3_0_0; }
		
		//(',' elements+=Parameter)*
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//','
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }
		
		//elements+=Parameter
		public Assignment getElementsAssignment_3_1_1() { return cElementsAssignment_3_1_1; }
		
		//Parameter
		public RuleCall getElementsParameterParserRuleCall_3_1_1_0() { return cElementsParameterParserRuleCall_3_1_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}
	public class NumericElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Numeric");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFLOATTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Numeric:
		//	INT | FLOAT;
		@Override public ParserRule getRule() { return rule; }
		
		//INT | FLOAT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//FLOAT
		public RuleCall getFLOATTerminalRuleCall_1() { return cFLOATTerminalRuleCall_1; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNumericParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Value:
		//	Numeric | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//Numeric | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Numeric
		public RuleCall getNumericParserRuleCall_0() { return cNumericParserRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//Parameter:
		//	{Parameter} value=Value;
		@Override public ParserRule getRule() { return rule; }
		
		//{Parameter} value=Value
		public Group getGroup() { return cGroup; }
		
		//{Parameter}
		public Action getParameterAction_0() { return cParameterAction_0; }
		
		//value=Value
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_1_0() { return cValueValueParserRuleCall_1_0; }
	}
	
	public class DistributionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Distribution");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDbernEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDbernDbernKeyword_0_0 = (Keyword)cDbernEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDbetaEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDbetaDbetaKeyword_1_0 = (Keyword)cDbetaEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDbinEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDbinDbinKeyword_2_0 = (Keyword)cDbinEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDchisqrEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDchisqrDchisqrKeyword_3_0 = (Keyword)cDchisqrEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cDdexpEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cDdexpDdexpKeyword_4_0 = (Keyword)cDdexpEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cDexpEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cDexpDexpKeyword_5_0 = (Keyword)cDexpEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cDfEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cDfDfKeyword_6_0 = (Keyword)cDfEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cDgammaEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cDgammaDgammaKeyword_7_0 = (Keyword)cDgammaEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cDgengammEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cDgengammDgenGammaKeyword_8_0 = (Keyword)cDgengammEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cDhyperEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cDhyperDhyperKeyword_9_0 = (Keyword)cDhyperEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cDlogisEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cDlogisDlogisKeyword_10_0 = (Keyword)cDlogisEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cDlnormEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cDlnormDlnormKeyword_11_0 = (Keyword)cDlnormEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cDnegbinEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cDnegbinDnegbinKeyword_12_0 = (Keyword)cDnegbinEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cDnchisqrEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cDnchisqrDnchisqrKeyword_13_0 = (Keyword)cDnchisqrEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cDnormEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cDnormDnormKeyword_14_0 = (Keyword)cDnormEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cDparEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cDparDparKeyword_15_0 = (Keyword)cDparEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cDpoisEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cDpoisDpoisKeyword_16_0 = (Keyword)cDpoisEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cDtEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cDtDtKeyword_17_0 = (Keyword)cDtEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cDweibEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cDweibDweibKeyword_18_0 = (Keyword)cDweibEnumLiteralDeclaration_18.eContents().get(0);
		
		//enum Distribution:
		//	dbern |
		//	dbeta |
		//	dbin | dchisqr | ddexp |
		//	dexp | df |
		//	dgamma | dgengamm='dgen.gamma' | dhyper | dlogis | dlnorm | dnegbin |
		//	dnchisqr | dnorm |
		//	dpar | dpois | dt | dweib;
		public EnumRule getRule() { return rule; }
		
		//dbern | dbeta | dbin | dchisqr | ddexp | dexp | df | dgamma | dgengamm='dgen.gamma' | dhyper | dlogis | dlnorm | dnegbin
		//| dnchisqr | dnorm | dpar | dpois | dt | dweib
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//dbern
		public EnumLiteralDeclaration getDbernEnumLiteralDeclaration_0() { return cDbernEnumLiteralDeclaration_0; }
		
		//'dbern'
		public Keyword getDbernDbernKeyword_0_0() { return cDbernDbernKeyword_0_0; }
		
		//dbeta
		public EnumLiteralDeclaration getDbetaEnumLiteralDeclaration_1() { return cDbetaEnumLiteralDeclaration_1; }
		
		//'dbeta'
		public Keyword getDbetaDbetaKeyword_1_0() { return cDbetaDbetaKeyword_1_0; }
		
		//dbin
		public EnumLiteralDeclaration getDbinEnumLiteralDeclaration_2() { return cDbinEnumLiteralDeclaration_2; }
		
		//'dbin'
		public Keyword getDbinDbinKeyword_2_0() { return cDbinDbinKeyword_2_0; }
		
		//dchisqr
		public EnumLiteralDeclaration getDchisqrEnumLiteralDeclaration_3() { return cDchisqrEnumLiteralDeclaration_3; }
		
		//'dchisqr'
		public Keyword getDchisqrDchisqrKeyword_3_0() { return cDchisqrDchisqrKeyword_3_0; }
		
		//ddexp
		public EnumLiteralDeclaration getDdexpEnumLiteralDeclaration_4() { return cDdexpEnumLiteralDeclaration_4; }
		
		//'ddexp'
		public Keyword getDdexpDdexpKeyword_4_0() { return cDdexpDdexpKeyword_4_0; }
		
		//dexp
		public EnumLiteralDeclaration getDexpEnumLiteralDeclaration_5() { return cDexpEnumLiteralDeclaration_5; }
		
		//'dexp'
		public Keyword getDexpDexpKeyword_5_0() { return cDexpDexpKeyword_5_0; }
		
		//df
		public EnumLiteralDeclaration getDfEnumLiteralDeclaration_6() { return cDfEnumLiteralDeclaration_6; }
		
		//'df'
		public Keyword getDfDfKeyword_6_0() { return cDfDfKeyword_6_0; }
		
		//dgamma
		public EnumLiteralDeclaration getDgammaEnumLiteralDeclaration_7() { return cDgammaEnumLiteralDeclaration_7; }
		
		//'dgamma'
		public Keyword getDgammaDgammaKeyword_7_0() { return cDgammaDgammaKeyword_7_0; }
		
		//dgengamm='dgen.gamma'
		public EnumLiteralDeclaration getDgengammEnumLiteralDeclaration_8() { return cDgengammEnumLiteralDeclaration_8; }
		
		//'dgen.gamma'
		public Keyword getDgengammDgenGammaKeyword_8_0() { return cDgengammDgenGammaKeyword_8_0; }
		
		//dhyper
		public EnumLiteralDeclaration getDhyperEnumLiteralDeclaration_9() { return cDhyperEnumLiteralDeclaration_9; }
		
		//'dhyper'
		public Keyword getDhyperDhyperKeyword_9_0() { return cDhyperDhyperKeyword_9_0; }
		
		//dlogis
		public EnumLiteralDeclaration getDlogisEnumLiteralDeclaration_10() { return cDlogisEnumLiteralDeclaration_10; }
		
		//'dlogis'
		public Keyword getDlogisDlogisKeyword_10_0() { return cDlogisDlogisKeyword_10_0; }
		
		//dlnorm
		public EnumLiteralDeclaration getDlnormEnumLiteralDeclaration_11() { return cDlnormEnumLiteralDeclaration_11; }
		
		//'dlnorm'
		public Keyword getDlnormDlnormKeyword_11_0() { return cDlnormDlnormKeyword_11_0; }
		
		//dnegbin
		public EnumLiteralDeclaration getDnegbinEnumLiteralDeclaration_12() { return cDnegbinEnumLiteralDeclaration_12; }
		
		//'dnegbin'
		public Keyword getDnegbinDnegbinKeyword_12_0() { return cDnegbinDnegbinKeyword_12_0; }
		
		//dnchisqr
		public EnumLiteralDeclaration getDnchisqrEnumLiteralDeclaration_13() { return cDnchisqrEnumLiteralDeclaration_13; }
		
		//'dnchisqr'
		public Keyword getDnchisqrDnchisqrKeyword_13_0() { return cDnchisqrDnchisqrKeyword_13_0; }
		
		//dnorm
		public EnumLiteralDeclaration getDnormEnumLiteralDeclaration_14() { return cDnormEnumLiteralDeclaration_14; }
		
		//'dnorm'
		public Keyword getDnormDnormKeyword_14_0() { return cDnormDnormKeyword_14_0; }
		
		//dpar
		public EnumLiteralDeclaration getDparEnumLiteralDeclaration_15() { return cDparEnumLiteralDeclaration_15; }
		
		//'dpar'
		public Keyword getDparDparKeyword_15_0() { return cDparDparKeyword_15_0; }
		
		//dpois
		public EnumLiteralDeclaration getDpoisEnumLiteralDeclaration_16() { return cDpoisEnumLiteralDeclaration_16; }
		
		//'dpois'
		public Keyword getDpoisDpoisKeyword_16_0() { return cDpoisDpoisKeyword_16_0; }
		
		//dt
		public EnumLiteralDeclaration getDtEnumLiteralDeclaration_17() { return cDtEnumLiteralDeclaration_17; }
		
		//'dt'
		public Keyword getDtDtKeyword_17_0() { return cDtDtKeyword_17_0; }
		
		//dweib
		public EnumLiteralDeclaration getDweibEnumLiteralDeclaration_18() { return cDweibEnumLiteralDeclaration_18; }
		
		//'dweib'
		public Keyword getDweibDweibKeyword_18_0() { return cDweibDweibKeyword_18_0; }
	}
	public class FunctionElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.Function");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAcosEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAcosAcosKeyword_0_0 = (Keyword)cAcosEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAcoshEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAcoshAcoshKeyword_1_0 = (Keyword)cAcoshEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cAsinEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cAsinAsinKeyword_2_0 = (Keyword)cAsinEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cAsinhEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cAsinhAsinhKeyword_3_0 = (Keyword)cAsinhEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cAtanEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cAtanAtanKeyword_4_0 = (Keyword)cAtanEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cLogEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cLogLogKeyword_5_0 = (Keyword)cLogEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cEpEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cEpExpKeyword_6_0 = (Keyword)cEpEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cCEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cCCKeyword_7_0 = (Keyword)cCEnumLiteralDeclaration_7.eContents().get(0);
		
		//enum Function:
		//	acos | acosh | asin | asinh | atan | log | ep='exp' | c;
		public EnumRule getRule() { return rule; }
		
		//acos | acosh | asin | asinh | atan | log | ep='exp' | c
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//acos
		public EnumLiteralDeclaration getAcosEnumLiteralDeclaration_0() { return cAcosEnumLiteralDeclaration_0; }
		
		//'acos'
		public Keyword getAcosAcosKeyword_0_0() { return cAcosAcosKeyword_0_0; }
		
		//acosh
		public EnumLiteralDeclaration getAcoshEnumLiteralDeclaration_1() { return cAcoshEnumLiteralDeclaration_1; }
		
		//'acosh'
		public Keyword getAcoshAcoshKeyword_1_0() { return cAcoshAcoshKeyword_1_0; }
		
		//asin
		public EnumLiteralDeclaration getAsinEnumLiteralDeclaration_2() { return cAsinEnumLiteralDeclaration_2; }
		
		//'asin'
		public Keyword getAsinAsinKeyword_2_0() { return cAsinAsinKeyword_2_0; }
		
		//asinh
		public EnumLiteralDeclaration getAsinhEnumLiteralDeclaration_3() { return cAsinhEnumLiteralDeclaration_3; }
		
		//'asinh'
		public Keyword getAsinhAsinhKeyword_3_0() { return cAsinhAsinhKeyword_3_0; }
		
		//atan
		public EnumLiteralDeclaration getAtanEnumLiteralDeclaration_4() { return cAtanEnumLiteralDeclaration_4; }
		
		//'atan'
		public Keyword getAtanAtanKeyword_4_0() { return cAtanAtanKeyword_4_0; }
		
		//log
		public EnumLiteralDeclaration getLogEnumLiteralDeclaration_5() { return cLogEnumLiteralDeclaration_5; }
		
		//'log'
		public Keyword getLogLogKeyword_5_0() { return cLogLogKeyword_5_0; }
		
		//ep='exp'
		public EnumLiteralDeclaration getEpEnumLiteralDeclaration_6() { return cEpEnumLiteralDeclaration_6; }
		
		//'exp'
		public Keyword getEpExpKeyword_6_0() { return cEpExpKeyword_6_0; }
		
		//c
		public EnumLiteralDeclaration getCEnumLiteralDeclaration_7() { return cCEnumLiteralDeclaration_7; }
		
		//'c'
		public Keyword getCCKeyword_7_0() { return cCCKeyword_7_0; }
	}
	public class RelationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.RelationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTOCHASTICEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTOCHASTICTildeKeyword_0_0 = (Keyword)cSTOCHASTICEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMIN1EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDETERMIN1LessThanSignHyphenMinusKeyword_1_0 = (Keyword)cDETERMIN1EnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDETERMIN2EnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDETERMIN2EqualsSignKeyword_2_0 = (Keyword)cDETERMIN2EnumLiteralDeclaration_2.eContents().get(0);
		
		//enum RelationType:
		//	STOCHASTIC='~' | DETERMIN1='<-' | DETERMIN2='=';
		public EnumRule getRule() { return rule; }
		
		//STOCHASTIC='~' | DETERMIN1='<-' | DETERMIN2='='
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STOCHASTIC='~'
		public EnumLiteralDeclaration getSTOCHASTICEnumLiteralDeclaration_0() { return cSTOCHASTICEnumLiteralDeclaration_0; }
		
		//'~'
		public Keyword getSTOCHASTICTildeKeyword_0_0() { return cSTOCHASTICTildeKeyword_0_0; }
		
		//DETERMIN1='<-'
		public EnumLiteralDeclaration getDETERMIN1EnumLiteralDeclaration_1() { return cDETERMIN1EnumLiteralDeclaration_1; }
		
		//'<-'
		public Keyword getDETERMIN1LessThanSignHyphenMinusKeyword_1_0() { return cDETERMIN1LessThanSignHyphenMinusKeyword_1_0; }
		
		//DETERMIN2='='
		public EnumLiteralDeclaration getDETERMIN2EnumLiteralDeclaration_2() { return cDETERMIN2EnumLiteralDeclaration_2; }
		
		//'='
		public Keyword getDETERMIN2EqualsSignKeyword_2_0() { return cDETERMIN2EqualsSignKeyword_2_0; }
	}
	
	private final BugsModelElements pBugsModel;
	private final TerminalRule tINT;
	private final TerminalRule tFLOAT;
	private final TerminalRule tSTRING;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	private final TerminalRule tANY_OTHER;
	private final TerminalRule tID;
	private final TerminalRule tARRAYDIM;
	private final InstructionElements pInstruction;
	private final ForElements pFor;
	private final RelationElements pRelation;
	private final OperationElements pOperation;
	private final NumericElements pNumeric;
	private final ValueElements pValue;
	private final ParameterElements pParameter;
	private final DistributionElements eDistribution;
	private final FunctionElements eFunction;
	private final RelationTypeElements eRelationType;
	
	private final Grammar grammar;

	@Inject
	public BugsDslGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pBugsModel = new BugsModelElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.INT");
		this.tFLOAT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.FLOAT");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.STRING");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.WS");
		this.tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.ANY_OTHER");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.ID");
		this.tARRAYDIM = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.opcoach.bugsy.xtext.BugsDsl.ARRAYDIM");
		this.pInstruction = new InstructionElements();
		this.pFor = new ForElements();
		this.pRelation = new RelationElements();
		this.pOperation = new OperationElements();
		this.pNumeric = new NumericElements();
		this.pValue = new ValueElements();
		this.pParameter = new ParameterElements();
		this.eDistribution = new DistributionElements();
		this.eFunction = new FunctionElements();
		this.eRelationType = new RelationTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.opcoach.bugsy.xtext.BugsDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//BugsModel:
	//	{BugsModel}
	//	'model' '{'
	//	instructions+=Instruction*
	//	'}';
	public BugsModelElements getBugsModelAccess() {
		return pBugsModel;
	}
	
	public ParserRule getBugsModelRule() {
		return getBugsModelAccess().getRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//terminal FLOAT returns ecore::EFloat:
	//	INT '.' INT ('E' ('+' | '-') INT)?;
	public TerminalRule getFLOATRule() {
		return tFLOAT;
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	}
	
	//terminal SL_COMMENT:
	//	'#' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return tANY_OTHER;
	}
	
	//terminal ID:
	//	('a'..'z' | 'A'..'Z') ('a'..'z' | 'A'..'Z' | '_' | '.' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return tID;
	}
	
	//terminal ARRAYDIM:
	//	'[' '0'..'9'+ | ('a'..'z' | 'A'..'Z')+ ']';
	public TerminalRule getARRAYDIMRule() {
		return tARRAYDIM;
	}
	
	////.................................
	//// Starting grammar definition 
	////.................................
	//Instruction:
	//	For | Relation;
	public InstructionElements getInstructionAccess() {
		return pInstruction;
	}
	
	public ParserRule getInstructionRule() {
		return getInstructionAccess().getRule();
	}
	
	//For:
	//	{For}
	//	'for' '(' variable=ID 'in' low=INT ':' high=ID ')' '{' contents+=Instruction* '}';
	public ForElements getForAccess() {
		return pFor;
	}
	
	public ParserRule getForRule() {
		return getForAccess().getRule();
	}
	
	//Relation:
	//	name=ID /* (dim=ARRAYDIM)? */ relationType=RelationType leftExpr=Operation;
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//Operation:
	//	{Operation} (distrib=Distribution? & function=Function?) '(' (elements+=Parameter (',' elements+=Parameter)*)? ')';
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//Numeric:
	//	INT | FLOAT;
	public NumericElements getNumericAccess() {
		return pNumeric;
	}
	
	public ParserRule getNumericRule() {
		return getNumericAccess().getRule();
	}
	
	//Value:
	//	Numeric | ID;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//Parameter:
	//	{Parameter} value=Value;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//enum Distribution:
	//	dbern |
	//	dbeta |
	//	dbin | dchisqr | ddexp |
	//	dexp | df |
	//	dgamma | dgengamm='dgen.gamma' | dhyper | dlogis | dlnorm | dnegbin |
	//	dnchisqr | dnorm |
	//	dpar | dpois | dt | dweib;
	public DistributionElements getDistributionAccess() {
		return eDistribution;
	}
	
	public EnumRule getDistributionRule() {
		return getDistributionAccess().getRule();
	}
	
	//enum Function:
	//	acos | acosh | asin | asinh | atan | log | ep='exp' | c;
	public FunctionElements getFunctionAccess() {
		return eFunction;
	}
	
	public EnumRule getFunctionRule() {
		return getFunctionAccess().getRule();
	}
	
	//enum RelationType:
	//	STOCHASTIC='~' | DETERMIN1='<-' | DETERMIN2='=';
	public RelationTypeElements getRelationTypeAccess() {
		return eRelationType;
	}
	
	public EnumRule getRelationTypeRule() {
		return getRelationTypeAccess().getRule();
	}
}
